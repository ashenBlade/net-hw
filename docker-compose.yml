version: '3.0'

services:
  frontend:
    build: 
      context: src/frontend
      dockerfile: Dockerfile
      args:
        server_url: http://localhost:8081
        file_server_url: http://localhost:8083
        file_metadata_server_url: http://localhost:8083
    ports:
      - '8080:80'
    depends_on:
      - backend
  
  backend:
    build:
      context: src/backend
      dockerfile: TicTacToe.Web/Dockerfile
    ports:
      - '8081:80'
    environment:
      POSTGRES_HOST: database
      POSTGRES_USERNAME: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
      POSTGRES_PORT: 5432
      
      RMQ_HOST: rabbit-mq
      RMQ_USERNAME: guest
      RMQ_PASSWORD: guest
      RMQ_PORT: 5672
      RMQ_EXCHANGE: amq.fanout
        
      FRONTEND_URLS: https://localhost:8080,http://localhost:8080
      
    depends_on:
      - database
      - rabbit-mq
  
  rabbit-mq:
    image: rabbitmq:3.7-management
    ports:
      - "5672:5672"
      - "15672:15672"
      
  database:
    image: postgres:14-alpine
    environment:
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_USERNAME=postgres
    ports:
      - "5432:5432"
    volumes:
      - database:/var/lib/postgresql/data
  
volumes:
  database:
    driver: local
  minio-storage:
    driver: local
  mongo-db-files:
    driver: local
  redis:
    driver: local
  collect-it-db:
    driver: local
      
#  mongo-db:
#    image: mongo:6.0.2
#    ports:
#      - '27017:27017'
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: mongoadmin
#      MONGO_INITDB_ROOT_PASSWORD: mongopassword
#    volumes:
#      - mongo-db-files:/data/db
      
#  redis:
#    image: bitnami/redis
#    ports:
#      - '6379:6379'
#        
#    environment:
#      REDIS_REPLICATION_MODE: 'master'
#      ALLOW_EMPTY_PASSWORD: 'yes'
#    volumes:
#      - redis:/data 
